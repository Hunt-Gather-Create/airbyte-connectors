name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      FORCE_COLOR: true
      HUSKY_SKIP_INSTALL: 1
      HUSKY_SKIP_HOOKS: 1
      HUSKY: 0

    steps:
      - name: Check out
        uses: actions/checkout@v2.4.0

      - name: Source Acceptance Test
        if: ${{ github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' }} # Skip PRs
        env:
          AGILEACCELERATOR_SOURCE_TEST_CONFIG: ${{ secrets.AGILEACCELERATOR_SOURCE_TEST_CONFIG }}
          AZUREACTIVEDIRECTORY_SOURCE_TEST_CONFIG: ${{ secrets.AZUREACTIVEDIRECTORY_SOURCE_TEST_CONFIG }}
          BACKLOG_SOURCE_TEST_CONFIG: ${{ secrets.BACKLOG_SOURCE_TEST_CONFIG }}
          BITBUCKET_SOURCE_TEST_CONFIG: ${{ secrets.BITBUCKET_SOURCE_TEST_CONFIG }}
          CUSTOMER_IO_SOURCE_TEST_CONFIG: ${{ secrets.CUSTOMER_IO_SOURCE_TEST_CONFIG }}
          DOCKER_SOURCE_TEST_CONFIG: ${{ secrets.DOCKER_SOURCE_TEST_CONFIG }}
          FIREHYDRANT_SOURCE_TEST_CONFIG: ${{ secrets.FIREHYDRANT_SOURCE_TEST_CONFIG }}
          GOOGLECALENDAR_SOURCE_TEST_CONFIG: ${{ secrets.GOOGLECALENDAR_SOURCE_TEST_CONFIG }}
          HARNESS_SOURCE_TEST_CONFIG: ${{ secrets.HARNESS_SOURCE_TEST_CONFIG }}
          PAGERDUTY_SOURCE_TEST_CONFIG: ${{ secrets.PAGERDUTY_SOURCE_TEST_CONFIG }}
          SHORTCUT_SOURCE_TEST_CONFIG: ${{ secrets.SHORTCUT_SOURCE_TEST_CONFIG }}
          SQUADCAST_SOURCE_TEST_CONFIG: ${{ secrets.SQUADCAST_SOURCE_TEST_CONFIG }}
          STATUSPAGE_SOURCE_TEST_CONFIG: ${{ secrets.STATUSPAGE_SOURCE_TEST_CONFIG }}
        run: |
          for i in $(ls -d sources/*/)
          do
            source=$(echo $i | cut -f2 -d'/')
            case "$source" in
              agileaccelerator-source|backlog-source|bitbucket-source|customer-io-source|firehydrant-source|googlecalendar-source|harness-source|pagerduty-source|phabricator-source|squadcast-source|statuspage-source)
                ./scripts/source-acceptance-test.sh $source
                ;;
              *)
                echo "Skipping $source acceptance tests"
                ;;
            esac
          done
